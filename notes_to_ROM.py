# header

# Notes data from C2 to B8
# 20 * 34 + 8 = 688
# 7 * 2 * (8 - 2) = 84
NoteTable = {
    
}


NoteTable = {
    """
    $2c, $00, $16, $04, $80, $a3, $92, $9d, $00, $4e, $04, $a3, $83, $92, $07, $01, $83, $04, $80, $a4,
    $92, $6b, $01, $b5, $04, $a4, $83, $92, $ca, $01, $e5, $04, $80, $a5, $92, $23, $02, $11, $05, $80,
    $a6, $92, $77, $02, $3c, $05, $a6, $83, $92, $c7, $02, $63, $05, $80, $a7, $92, $12, $03, $89, $05,
    $a7, $83, $92, $58, $03, $ac, $05, $80, $a1, $92, $9b, $03, $ce, $05, $a1, $83, $92, $da, $03, $ed,
    $05, $80, $a2, $92, $16, $04, $0b, $06, $80, $a3, $93, $4e, $04, $27, $06, $a3, $83, $93, $83, $04,
    $42, $06, $80, $a4, $93, $b5, $04, $5b, $06, $a4, $83, $93, $e5, $04, $72, $06, $80, $a5, $93, $11,
    $05, $89, $06, $80, $a6, $93, $3c, $05, $9e, $06, $a6, $83, $93, $63, $05, $b2, $06, $80, $a7, $93,
    $89, $05, $c4, $06, $a7, $83, $93, $ac, $05, $d6, $06, $80, $a1, $93, $ce, $05, $e7, $06, $a1, $83,
    $93, $ed, $05, $f7, $06, $80, $a2, $93, $0b, $06, $06, $07, $80, $a3, $94, $27, $06, $14, $07, $a3,
    $83, $94, $42, $06, $21, $07, $80, $a4, $94, $5b, $06, $2d, $07, $a4, $83, $94, $72, $06, $39, $07,
    $80, $a5, $94, $89, $06, $44, $07, $80, $a6, $94, $9e, $06, $4f, $07, $a6, $83, $94, $b2, $06, $59,
    $07, $80, $a7, $94, $c4, $06, $62, $07, $a7, $83, $94, $d6, $06, $6b, $07, $80, $a1, $94, $e7, $06,
    $73, $07, $a1, $83, $94, $f7, $06, $7b, $07, $80, $a2, $94, $06, $07, $83, $07, $80, $a3, $95, $14,
    $07, $8a, $07, $a3, $83, $95, $21, $07, $90, $07, $80, $a4, $95, $2d, $07, $97, $07, $a4, $83, $95,
    $39, $07, $9d, $07, $80, $a5, $95, $44, $07, $a2, $07, $80, $a6, $95, $4f, $07, $a7, $07, $a6, $83,
    $95, $59, $07, $ac, $07, $80, $a7, $95, $62, $07, $b1, $07, $a7, $83, $95, $6b, $07, $b6, $07, $80,
    $a1, $95, $73, $07, $ba, $07, $a1, $83, $95, $7b, $07, $be, $07, $80, $a2, $95, $83, $07, $c1, $07,
    $80, $a3, $96, $8a, $07, $c5, $07, $a3, $83, $96, $90, $07, $c8, $07, $80, $a4, $96, $97, $07, $cb,
    $07, $a4, $83, $96, $9d, $07, $ce, $07, $80, $a5, $96, $a2, $07, $d1, $07, $80, $a6, $96, $a7, $07,
    $d4, $07, $a6, $83, $96, $ac, $07, $d6, $07, $80, $a7, $96, $b1, $07, $d9, $07, $a7, $83, $96, $b6,
    $07, $db, $07, $80, $a1, $96, $ba, $07, $dd, $07, $a1, $83, $96, $be, $07, $df, $07, $80, $a2, $96,
    $c1, $07, $e1, $07, $80, $a3, $97, $c5, $07, $e2, $07, $a3, $83, $97, $c8, $07, $e4, $07, $80, $a4,
    $97, $cb, $07, $e6, $07, $a4, $83, $97, $ce, $07, $e7, $07, $80, $a5, $97, $d1, $07, $e9, $07, $80,
    $a6, $97, $d4, $07, $ea, $07, $a6, $83, $97, $d6, $07, $eb, $07, $80, $a7, $97, $d9, $07, $ec, $07,
    $a7, $83, $97, $db, $07, $ed, $07, $80, $a1, $97, $dd, $07, $ee, $07, $a1, $83, $97, $df, $07, $ef,
    $07, $80, $a2, $97, $e1, $07, $f0, $07, $80, $a3, $98, $e2, $07, $f1, $07, $a3, $83, $98, $e4, $07,
    $f2, $07, $80, $a4, $98, $e6, $07, $f3, $07, $a4, $83, $98, $e7, $07, $f4, $07, $80, $a5, $98, $e9,
    $07, $f4, $07, $80, $a6, $98, $ea, $07, $f5, $07, $a6, $83, $98, $eb, $07, $f6, $07, $80, $a7, $98,
    $ec, $07, $f6, $07, $a7, $83, $98, $ed, $07, $f7, $07, $80, $a1, $98, $ee, $07, $f7, $07, $a1, $83,
    $98, $ef, $07, $f8, $07, $80, $a2, $98
    """
    }

LengthTable = {
    # assuming duty is 50 ($40):
    # 250ms: NR21 $80, NR24 $C0
    # prolly implement length w/ time between notes
}

"""
(inspired by)
"THE REGRET OF VICTORY" - KASTLEVANIA by KIELEN KING

c#6 g#5 b5 c#5 b5 g#5 g#5 f#5 g#5 f#5 e5 f#5 g#5 br
3   1   1   1  1  4   3   2   2   2   3  3   4   4

f#5 f#5 f#5 f#5 g#5 c#6 c#6 e6 f#6 e6 d#6 g#5 c#6
2   2   2   1   2   4   2   2  2   1  1   2   4
"""

def convert_to_rom_data(music):
    converted_notes = []
    for note in music:
        converted_notes.append(NoteTable(note[0]), LengthTable(note[1]))
    return 0

def print_notes(music):
    for note in music:
        print(note[0] + note[1])
    return 0

"""
    ld a, [WRAM_NOTE_NUMBER]
    ld c, a
    sla a
    ld h, 0
    ld l, a
    sla l
    rl h
    sla l
    rl h

    ld a, c
    cpl
    inc a
    ld c, a
    ld a, $FF
    adc a, 0
    ld b, a

    add hl, bc
    ld de, NoteTable + NOTE_FREQUENCY_CH124
    add hl, de

    ; load the frequency low bits
    ld a, [hli]
    ld [WRAM_CH2_REGISTER + 2], a

    push hl
    DisplayRegisterA 16, 17
    pop hl

    ; load the frequency high bits and set the start/length flags
    ld b, $C0
    ld a, [WRAM_LENGTH_INDEX]
    or a, a
    jr nz, .length_off
        ld b, $80
    .length_off

    ld a, [hl]
    or a, b
    ld [WRAM_CH2_REGISTER + 3], a
"""